{
  "compilerOptions": {
    "target": "ES2020",
    "experimentalDecorators": true,
    "useDefineForClassFields": false,
    "module": "ESNext",
    "lib": ["ES2020", "DOM", "DOM.Iterable"],
    "skipLibCheck": true,

    /* Bundler mode */
    "moduleResolution": "bundler",
    // "moduleResolution": "Node",
    "allowImportingTsExtensions": true,
    "resolveJsonModule": true,
    "isolatedModules": true,
    "noEmit": true,
    "allowSyntheticDefaultImports": true,

    /* Linting */
    "strict": true,
    "noUnusedLocals": true,
    "noUnusedParameters": true,
    "noFallthroughCasesInSwitch": true,
    "types": ["vite/client"]

  },
  // "include": ["src"],
}

/*





{
  "compilerOptions": {
    // boring/boilerplate stuff
    "target": "ES2015",
    "module": "ES2020",
    "lib": [
      "ES2019",
      "DOM.Iterable"
    ],
    // hmm ?
    "noEmit": true,
    "moduleResolution": "Node",
    // how typey do u want your typescript ?
    "strict": true,
    "noUnusedLocals": true,
    "noUnusedParameters": true,
    "noImplicitReturns": true,
    "noFallthroughCasesInSwitch": true,
    // key for lit
    "experimentalDecorators": true,
    "useDefineForClassFields": false, // https://lit.dev/docs/components/decorators/#decorators-typescript
    // handy
    "types": [ // this enables `import css from "foo.css"`
      "vite/client" // https://vitejs.dev/guide/features.html#client-types
    ],
    // these two enable `import foo from "foo.json"`
    "resolveJsonModule": true,
    "allowSyntheticDefaultImports": true,
  }
}

*/

# https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-language-conventions?view=vs-2019

# do this:
# https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-language-conventions?view=vs-2019#parentheses-preferences


# Remove the line below if you want to inherit .editorconfig settings from higher directories
root = true

# C# files
[*.cs]

#### Core EditorConfig Options ####

# Indentation and spacing
indent_size = 4
indent_style = space
tab_width = 4

# New line preferences
end_of_line = crlf
insert_final_newline = false

#### .NET Coding Conventions ####

# Organize usings
dotnet_separate_import_directive_groups = true
dotnet_sort_system_directives_first = true

# this. and Me. preferences
dotnet_style_qualification_for_event = false:suggestion
dotnet_style_qualification_for_field = true:silent
dotnet_style_qualification_for_method = false:suggestion
dotnet_style_qualification_for_property = false:silent

# Language keywords vs BCL types preferences
dotnet_style_predefined_type_for_locals_parameters_members = true:suggestion
dotnet_style_predefined_type_for_member_access = true:suggestion

# Parentheses preferences
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_other_operators = never_if_unnecessary:silent
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:silent

# Modifier preferences
dotnet_style_require_accessibility_modifiers = for_non_interface_members:suggestion

# Expression-level preferences
dotnet_style_coalesce_expression = true:warning
dotnet_style_collection_initializer = true:warning
dotnet_style_explicit_tuple_names = true:warning
dotnet_style_null_propagation = true:warning
dotnet_style_object_initializer = true:suggestion
dotnet_style_prefer_auto_properties = true:suggestion
dotnet_style_prefer_compound_assignment = true:suggestion
dotnet_style_prefer_conditional_expression_over_assignment = true:silent
dotnet_style_prefer_conditional_expression_over_return = true:silent
dotnet_style_prefer_inferred_anonymous_type_member_names = true:warning
dotnet_style_prefer_inferred_tuple_names = true:warning
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:warning

# Field preferences
dotnet_style_readonly_field = true:suggestion

# Parameter preferences
dotnet_code_quality_unused_parameters = all:silent

#### C# Coding Conventions ####

# var preferences
csharp_style_var_elsewhere = true:silent
csharp_style_var_for_built_in_types = true:suggestion
csharp_style_var_when_type_is_apparent = true:silent

# Expression-bodied members
csharp_style_expression_bodied_accessors = true:suggestion
csharp_style_expression_bodied_constructors = false:silent
csharp_style_expression_bodied_indexers = true:suggestion
csharp_style_expression_bodied_lambdas = true:suggestion
csharp_style_expression_bodied_local_functions = true:suggestion
csharp_style_expression_bodied_methods = true:silent
csharp_style_expression_bodied_operators = true:suggestion
csharp_style_expression_bodied_properties = true:suggestion

# Pattern matching preferences
csharp_style_pattern_matching_over_as_with_null_check = true:warning
csharp_style_pattern_matching_over_is_with_cast_check = true:warning
csharp_style_prefer_switch_expression = true:suggestion

# Null-checking preferences
csharp_style_conditional_delegate_call = true:warning

# Modifier preferences
csharp_prefer_static_local_function = true:suggestion
csharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async

# Code-block preferences
csharp_prefer_braces = when_multiline:silent
csharp_prefer_simple_using_statement = true:suggestion

# Expression-level preferences
csharp_prefer_simple_default_expression = true:warning
csharp_style_deconstructed_variable_declaration = true:silent
csharp_style_inlined_variable_declaration = true:warning
csharp_style_pattern_local_over_anonymous_function = true:warning
csharp_style_prefer_index_operator = true:suggestion
csharp_style_prefer_range_operator = true:suggestion
csharp_style_throw_expression = true:warning
csharp_style_unused_value_assignment_preference = discard_variable:silent
csharp_style_unused_value_expression_statement_preference = discard_variable:silent

# 'using' directive preferences
csharp_using_directive_placement = outside_namespace:none

#### C# Formatting Rules ####

# New line preferences
csharp_new_line_before_catch = true
csharp_new_line_before_else = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_open_brace = all
csharp_new_line_between_query_expression_clauses = true

# Indentation preferences
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents = true
csharp_indent_case_contents_when_block = false
csharp_indent_labels = one_less_than_current
csharp_indent_switch_labels = true

# Space preferences
csharp_space_after_cast = true
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_after_comma = true
csharp_space_after_dot = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_after_semicolon_in_for_statement = true
csharp_space_around_binary_operators = before_and_after
# csharp_space_around_declaration_statements = ignore
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_before_comma = false
csharp_space_before_dot = false
csharp_space_before_open_square_brackets = false
csharp_space_before_semicolon_in_for_statement = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = true
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_declaration_parameter_list_parentheses = true
csharp_space_between_parentheses = control_flow_statements
csharp_space_between_square_brackets = false

# Wrapping preferences
csharp_preserve_single_line_blocks = true
csharp_preserve_single_line_statements = false

#### Naming styles ####

# Naming rules

dotnet_naming_rule.non_public_members_should_be_camel_case.severity = suggestion
dotnet_naming_rule.non_public_members_should_be_camel_case.symbols = non_public_members
dotnet_naming_rule.non_public_members_should_be_camel_case.style = camel_case

dotnet_naming_rule.public_members_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.public_members_should_be_pascal_case.symbols = public_members
dotnet_naming_rule.public_members_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.types_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.types_should_be_pascal_case.symbols = types
dotnet_naming_rule.types_should_be_pascal_case.style = pascal_case

# dotnet_naming_rule.static_members_should_be_underscore_prefix.severity = suggestion
# dotnet_naming_rule.static_members_should_be_underscore_prefix.symbols = static_members

dotnet_naming_rule.local_functions_should_be_camel_case.severity = suggestion
dotnet_naming_rule.local_functions_should_be_camel_case.symbols = local_functions
dotnet_naming_rule.local_functions_should_be_camel_case.style = camel_case

dotnet_naming_rule.locals_and_params_should_be_camel_case.severity = silent
dotnet_naming_rule.locals_and_params_should_be_camel_case.symbols = locals_and_params
dotnet_naming_rule.locals_and_params_should_be_camel_case.style = camel_case

dotnet_naming_rule.constants_should_be_const_name.severity = suggestion
dotnet_naming_rule.constants_should_be_const_name.symbols = constants
dotnet_naming_rule.constants_should_be_const_name.style = const_name

# Symbol specifications

dotnet_naming_symbols.non_public_members.applicable_kinds = field, event, method
dotnet_naming_symbols.non_public_members.applicable_accessibilities = internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.non_public_members.required_modifiers = 

dotnet_naming_symbols.public_members.applicable_kinds = property, field, event, method
dotnet_naming_symbols.public_members.applicable_accessibilities = public
dotnet_naming_symbols.public_members.required_modifiers = 

dotnet_naming_symbols.types.applicable_kinds = class, struct, interface, enum, delegate
dotnet_naming_symbols.types.applicable_accessibilities = *
dotnet_naming_symbols.types.required_modifiers = 

dotnet_naming_symbols.static_members.applicable_kinds = property, field, event
dotnet_naming_symbols.static_members.applicable_accessibilities = internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.static_members.required_modifiers = static

dotnet_naming_symbols.local_functions.applicable_kinds = local_function
dotnet_naming_symbols.local_functions.applicable_accessibilities = local
dotnet_naming_symbols.local_functions.required_modifiers = 

dotnet_naming_symbols.locals_and_params.applicable_kinds = parameter, local
dotnet_naming_symbols.locals_and_params.applicable_accessibilities = local
dotnet_naming_symbols.locals_and_params.required_modifiers = 

dotnet_naming_symbols.constants.applicable_kinds = field
dotnet_naming_symbols.constants.applicable_accessibilities = *
dotnet_naming_symbols.constants.required_modifiers = const

# Naming styles

dotnet_naming_style.pascal_case.required_prefix = 
dotnet_naming_style.pascal_case.required_suffix = 
dotnet_naming_style.pascal_case.word_separator = 
dotnet_naming_style.pascal_case.capitalization = pascal_case

dotnet_naming_style.camel_case.required_prefix = 
dotnet_naming_style.camel_case.required_suffix = 
dotnet_naming_style.camel_case.word_separator = 
dotnet_naming_style.camel_case.capitalization = camel_case

dotnet_naming_style.underscore_prefix.required_prefix = _
dotnet_naming_style.underscore_prefix.required_suffix = 
dotnet_naming_style.underscore_prefix.word_separator = 
dotnet_naming_style.underscore_prefix.capitalization = camel_case

dotnet_naming_style.const_name.required_prefix = 
dotnet_naming_style.const_name.required_suffix = 
dotnet_naming_style.const_name.word_separator = _
dotnet_naming_style.const_name.capitalization = pascal_case

# xUnit2013: Do not use equality check to check for collection size.
dotnet_diagnostic.xUnit2013.severity = none

# two flavors of `unnecessary using`
# https://github.com/dotnet/roslyn/issues/28114
dotnet_diagnostic.IDE0005.severity = none
dotnet_diagnostic.CS8019.severity = suggestion

dotnet_diagnostic.CS8597.severity = silent # Thrown value may be null. (no shit, `throw null`)

dotnet_diagnostic.IDE0009.severity = silent # Add 'this' or 'Me' qualification.

dotnet_diagnostic.IDE0011.severity = silent # Add braces to 'if' statement. [Core]

dotnet_diagnostic.IDE0023.severity = silent # Use expression body for operators
dotnet_diagnostic.IDE0024.severity = silent # Use expression body for operators
dotnet_diagnostic.IDE0027.severity = silent # Use expression body for accessors


dotnet_diagnostic.IDE0035.severity = none # dupe of CS0162; Unreachable code detected

dotnet_diagnostic.IDE0040.severity = none # dupe of RCS1018; Accessibility modifiers required
# dotnet_diagnostic.RCS1018.severity = silent # Mark local variable as const.  ???
# dotnet_diagnostic.RCS1118.severity = silent # Mark local variable as const.  ???


dotnet_diagnostic.IDE0044.severity = silent
dotnet_diagnostic.RCS1169.severity = none # dupe of IDE0044, make field readonly

# dotnet_diagnostic.RCS1213.severity = none
dotnet_diagnostic.IDE0051.severity = none # dupe of RCS1213, unused field
dotnet_diagnostic.IDE0052.severity = none # dupe of RCS1213, unused field

dotnet_diagnostic.IDE0065.severity = none # Using directives must be placed outside of a namespace declaration

dotnet_diagnostic.RCS1036.severity = none # Remove redundant empty line 
dotnet_diagnostic.RCS1036a.severity = none # Remove redundant empty line 
dotnet_diagnostic.RCS1037.severity = none # Remove trailing white-space
dotnet_diagnostic.RCS1079.severity = none # implement instead of throw NotImplementedException
dotnet_diagnostic.RCS1080.severity = none # Use 'Count' property instead of 'Any' method
dotnet_diagnostic.RCS1155.severity = suggestion # Use StringComparison when comparing strings
dotnet_diagnostic.RCS1156.severity = none # Use string.Length instead of == ""
dotnet_diagnostic.RCS1197.severity = none # Optimize StringBuilder.Append call
dotnet_diagnostic.RCS1220.severity = none # dupe of IDE0038 - Use pattern matching


# VS IDE Analyzer development whatnot
dotnet_diagnostic.RS2008.severity = none

# *.G.cs and *.Generated.cs are auto-ignored
[{*.AssemblyAttributes.cs,*.AssemblyInfo.cs,*.Designer.cs,*__bg__virtual.cs}]
generated_code = true
dotnet_diagnostic.IDE1006.severity = none # naming rule violation
dotnet_diagnostic.CS8019.severity = none # unnecessary using
dotnet_diagnostic.CS8618.severity = none # might be null

[**/Generated/**.cs]
# generated_code = true
dotnet_diagnostic.IDE1006.severity = none # naming rule violation
dotnet_diagnostic.CS8019.severity = none # unnecessary using
dotnet_diagnostic.CS8618.severity = none # might be null

[Program.cs] # shush a bit please
dotnet_diagnostic.IDE1006.severity = none # main is private & uppercase
dotnet_diagnostic.CS8019.severity = silent # unnecessary using
dotnet_diagnostic.RCS1102.severity = silent # unnecessary using
dotnet_diagnostic.RCS1018.severity = silent # unnecessary using
dotnet_diagnostic.RCS1163.severity = silent # unnecessary using

#######################################

# <Rule Id="RCS1015" Action="Info" />
# <Rule Id="RCS1032" Action="Hidden" />
# <Rule Id="RCS1037" Action="Hidden" />
# <Rule Id="RCS1080" Action="None" />
# <Rule Id="RCS1090" Action="Hidden" />
# <Rule Id="RCS1093" Action="None" />
# <Rule Id="RCS1102" Action="Hidden" />
# <Rule Id="RCS1123" Action="Hidden" />
# <Rule Id="RCS1161" Action="None" />
# <Rule Id="RCS1163" Action="Hidden" />
# <Rule Id="RCS1170" Action="Hidden" />
# <Rule Id="RCS1196" Action="Hidden" />
# <Rule Id="RCS1212" Action="Hidden" />
# <Rule Id="RCS1225" Action="None" />


# <Rules AnalyzerId="Roslynator.Formatting.Analyzers" RuleNamespace="Roslynator.Formatting.Analyzers">
#     <Rule Id="RCS0009" Action="Hidden" />
#     <Rule Id="RCS0010" Action="Hidden" />
# </Rules>
@page "/{*page}"

@if (found is null)
{
    @* nav is now near-instant, raw html is in memory *@
    @* <div class="flex flex-col h-full" > <Loading /></div> *@
}
else if (found is false)
{
    <NotFound />
}
else
{
    <div class="prose prose-sm md:prose-base lg:prose-lg 2xl:prose-xl dark:prose-invert
                markdown" > 
            @((MarkupString)content)
    </div>
}

@code
{
    [Parameter] public string? page { get; set; }

    [Inject] public IContentProvider ContentProvider { get; set; }

    private string? content = null;
    private bool? found { get; set; } = null;

    protected override async Task OnParametersSetAsync()
    {
        page = page switch
        {
            null => "overview",
            string _ when page.Contains('#') => page[..page.IndexOf('#')],
            _ => page
        };

        // redundant ?     
        if (page == "") page = "overview";

        found = null;

        var markdown = await ContentProvider.GetContent(page);

        if (markdown is not null)
        {
            found = true;
            content = markdown;
        }
        else
        {
            found = false;
        }
    }
}
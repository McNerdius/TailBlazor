
@namespace StaticWebAppsDemo.Layouts

@inherits LayoutComponentBase
@inject NavigationManager navManager

<div class="flex flex-col justify-between h-full select-none @accentColor" @onclick="changeAccent">

    <div class="flex justify-center pt-[10px]">
        <DarkSwitch />
    </div>

    <div class="m-2">
        @Body
    </div>

    <div class="pb-8 mx-auto flex">
        
        <button type="button" 
                class="flex m-auto rounded-full px-1
                        ring-1 ring-accent
                       dark:bg-gray-700 dark:text-gray-100
                       bg-gray-100 text-gray-700
                        focus:outline-none group"

                @onclick='() => navManager.NavigateTo("https://github.com/McNerdius/TailBlazor")'>

            <div class="text-sm font-medium italic self-center m-2">
                Blazor + Tailwind JIT + F5 = TailBlazor
            </div>

            <svg class="h-6 w-6 mx-1 self-center group-hover:scale-125 transition-transform duration-75" viewBox="0 0 16 16" fill="currentColor">
                <path fill-rule="evenodd" d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z"></path>
            </svg>

        </button>

    </div>
</div>

@code 
{
    private static Random random = new();
    private string accentColor = "accent-green";

    void changeAccent()
    {
        var colors = new[] { "blue", "green", "yellow", "indigo", "pink", "black", "white" };

        accentColor = $"accent-{oneOf(colors.Except(new[]{accentColor}))}";

        T oneOf<T>(IEnumerable<T> items) => items.OrderBy(_ => random.Next()).First();
    }
}